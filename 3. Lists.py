print ("Lists")
programmingLanguages=['C','C++','JAVA','PYTHON','HTML3','CSS','JAVASCRIPT','NODE-JS']
print ("\tprogrammingLanguages = ",programmingLanguages)
print ("\tprogrammingLanguages[3] = ",programmingLanguages[3])
print ("\tprogrammingLanguages[3].title() = ",programmingLanguages[3].title())
print()
message=f'My favourite programming language is {programmingLanguages[3]}.'
print ("\tmessage=f'My favourite programming language is {programmingLanguages[3]}.'")
print ("\tmessage = ",message)
print()
programmingLanguages[5]='CSS3'
print ("\tprogrammingLanguages[5]='CSS3'")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
programmingLanguages.append('REACT')
print ("\tprogrammingLanguages.append('REACT')")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
programmingLanguages.insert(0,'ANGULAR-JS')
print ("\tprogrammingLanguages.insert(0,'ANGULAR-JS')")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
del programmingLanguages[0]
print ("\tdel programmingLanguages[0]")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tprogrammingLanguages.pop() = ",programmingLanguages.pop())
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tprogrammingLanguages.pop(7) = ",programmingLanguages.pop(7))
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tprogrammingLanguages.remove('C') = ",programmingLanguages.remove('C'))#no function output here "None" is displayed
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tTemporary sorting")
print ("\tsorted(programmingLanguages) = ",sorted(programmingLanguages))#temporary sorting
print()
programmingLanguages.sort()
print ("\tprogrammingLanguages.sort()")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
programmingLanguages.sort(reverse=True)
print ("\tprogrammingLanguages.sort(reverse=True)")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
programmingLanguages.reverse()
print ("\tprogrammingLanguages.reverse()")
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tlen(programmingLanguages) = ",len(programmingLanguages))
print ("\tprogrammingLanguages = ",programmingLanguages)
print()
print ("\tLooping through an entire list")
for language in programmingLanguages:
    print ("\t",language)
print()
print("\tMore work within a loop")
for language in programmingLanguages:
    print (f"\t{language.title()}, is a good programming language")
    print ("I love programming")
print("\nIts the next thing to the power of GOD")
print ()
print("\tNumber Loops")
for value in range(5):#1 variables
    print("\t",value)
for value in range(5,11):#2 variables
    print("\t",value)
print()
print ("\trange() function to make a list")
numbers=list(range(1,5))
print ("\tnumbers = list(range(1,5))")
print ("\tnumbers = ",numbers)
print()
print ("\tPriniting even numbers using range() function")
print ("\tevenNumbers = ",list(range(2,11,2)))
print ("\tQ.\tSquares of Numbers")
squares = []
print ("\t\tsquares = ",squares)
for value in range(1,11):
    squares.append(value**2)
print ("\t\tsquares = ",squares)
print()
lists=list(range(1,10))
print ("\tSimple Statistics with a list of Numbers ",lists)
print ("\tmin(lists) = ",min(lists))
print ("\tmax(lists) = ",max(lists))
print ("\tsum(lists) = ",sum(lists))
print()
print ("\tList Comprehensions-to create lists in one line of code")
print ("\tQ.\tSquares of Numbers")
squares = [value**2 for value in range(1,11)]
print ("\t\tsquares = [value**2 for value in range(1,11)]")
print ("\t\tsquares = ",squares)
print()
print("Slicing a List")
coders=['Shreyans Jain','Suraj Singh','Yogesh','Adarsh','Vijay Dhakad']
print ("\tcoders = ",coders)
print ("\tcoders[:1] = ",coders[:1])
print ("\tcoders[4:] = ",coders[4:])
print ("\tcoders[1:4] = ",coders[1:4])
print ("\tcoders[-2:] = ",coders[-2:])
print()
print("Looping through a slice")
for value in coders[:2]:
    print("\t",value)
print()
print ("Copying a List")
print ("\tprogrammers = coders")
programmers=coders
print ("\tprogrammers = ",programmers)
print("\tprogrammers.append('Faique Yusuf')")
programmers.append('Faique Yusuf')
print ("\tprogrammers = ",programmers)
print ("\tcoders = ",coders)#output is same because list is same but list has two different names
print ("\tdevelopers = programmers[:]")
developers=programmers[:]
print ("\tdevelopers = ",developers)
developers.pop()
developers.pop()
developers.pop()
print("\tdevelopers.pop()\n\tdevelopers.pop()\n\tdevelopers.pop()")
print ("\tdevelopers = ",developers)
print ("\tprogrammers = ",programmers)
print()
print ("Tupules")
dimensions=(200,50)
print ("\tdimensions = ",dimensions)
dimensions=(400,)
print ("\tdimensions = ",dimensions)
print ("\t\tLooping is same as LISTS")
print ("\t\tSingle values cannot be changed but can be over-written")
print()